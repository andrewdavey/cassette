@{
    ViewBag.Title = "Cassette | HTML Templates";
}

<h1>HTML Templates</h1>
<p>Client-side HTML templates, such as those used by <a href="https://github.com/jquery/jquery-tmpl">jQuery-tmpl</a>, need to be included into the page. With Cassette you can keep
each HTML template in a separate file. Cassette will then insert all the referenced templates for you, wrapped in script blocks.</p>
<p>For example, this is part of a project directory:</p>
<pre><code>HtmlTemplates/
  CustomerRow.htm
  CustomerDetail.htm

Views/
  Customer/
    List.cshtml

CassetteConfiguration.cs</code></pre>

<p>The two templates files simply contain HTML.</p>
<pre><code>&lt;tr&gt;
    &lt;td&gt;${ Name }&lt;td&gt;&lt;/td&gt;${ Address }&lt;/td&gt;
&lt;/tr&gt;</code></pre>
<pre><code>&lt;div&gt;
    &lt;label&gt;First name&lt;label&gt;
    &lt;input type="text" name="firstname" /&gt;
&lt;/div&gt;
&lt;div&gt;
    &lt;label&gt;Last name&lt;label&gt;
    &lt;input type="text" name="lastname" /&gt;
&lt;/div&gt;</code></pre>

<h2>Add a bundle in configuration</h2>
<p>In the Cassette configuration class, we create a bundle for the directory:</p>
<pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="code-type">CassetteConfiguration</span> : <span class="code-type">ICassetteConfiguration</span>
{
    <span class="keyword">public</span> <span class="keyword">void</span> Configure(<span class="code-type">BundleCollection</span> bundles, <span class="code-type">CassetteSettings</span> settings)
    {
        bundles.Add&lt;<span class="code-type">HtmlTemplate</span>&gt;(<span class="string">"HtmlTemplates"</span>);
    }
}</code></pre>

<p>Now in the <code>List.cshtml</code> view, we can reference this bundle.</p>
<pre><code><span class="code-tag">@@{</span>
    <span class="code-type">Bundles</span>.Reference(<span class="string">"HtmlTemplates"</span>);
}
<span class="open-tag">&lt;!</span><span class="tag">DOCTYPE</span> <span class="attribute">html</span><span class="close-tag">&gt;</span>
<span class="open-tag">&lt;</span><span class="tag">html</span><span class="close-tag">&gt;</span>
<span class="open-tag">&lt;</span><span class="tag">head</span><span class="close-tag">&gt;</span>
    <span class="open-tag">&lt;</span><span class="tag">title</span><span class="close-tag">&gt;</span>Web App<span class="open-tag">&lt;/</span><span class="tag">title</span><span class="close-tag">&gt;</span>
<span class="open-tag">&lt;/</span><span class="tag">head</span><span class="close-tag">&gt;</span>
<span class="open-tag">&lt;</span><span class="tag">body</span><span class="close-tag">&gt;</span>
    ...
    <span class="code-tag">@@</span><span class="razor-expression"><span class="code-type">Bundles</span>.RenderHtmlTemplates()</span>
<span class="open-tag">&lt;/</span><span class="tag">body</span><span class="close-tag">&gt;</span>
<span class="open-tag">&lt;/</span><span class="tag">html</span><span class="close-tag">&gt;</span></code></pre>

<p>Running this page, results in the following output:</p>
<pre><code><span class="open-tag">&lt;!</span><span class="tag">DOCTYPE</span> <span class="attribute">html</span><span class="close-tag">&gt;</span>
<span class="open-tag">&lt;</span><span class="tag">html</span><span class="close-tag">&gt;</span>
<span class="open-tag">&lt;</span><span class="tag">head</span><span class="close-tag">&gt;</span>
    <span class="open-tag">&lt;</span><span class="tag">title</span><span class="close-tag">&gt;</span>Web App<span class="open-tag">&lt;/</span><span class="tag">title</span><span class="close-tag">&gt;</span>
<span class="open-tag">&lt;/</span><span class="tag">head</span><span class="close-tag">&gt;</span>
<span class="open-tag">&lt;</span><span class="tag">body</span><span class="close-tag">&gt;</span>
    <span class="open-tag">&lt;</span><span class="tag">p</span><span class="close-tag">&gt;</span>My page<span class="open-tag">&lt;</span><span class="tag">/p</span><span class="close-tag">&gt;</span>
    <span class="open-tag">&lt;</span><span class="tag">script</span> <span class="attribute">id</span><span class="attribute-value">="CustomerRow"</span> <span class="attribute">type</span><span class="attribute-value">="text/html"</span><span class="close-tag">&gt;</span>
&lt;tr&gt;
    &lt;td&gt;${ Name }&lt;td&gt;&lt;/td&gt;${ Address }&lt;/td&gt;
&lt;/tr&gt;
    <span class="open-tag">&lt;/</span><span class="tag">script</span><span class="close-tag">&gt;</span>
    <span class="open-tag">&lt;</span><span class="tag">script</span> <span class="attribute">id</span><span class="attribute-value">="CustomerDetail"</span> <span class="attribute">type</span><span class="attribute-value">="text/html"</span><span class="close-tag">&gt;</span>
&lt;div&gt;
    &lt;label&gt;First name&lt;label&gt;
    &lt;input type="text" name="firstname" /&gt;
&lt;/div&gt;
&lt;div&gt;
    &lt;label&gt;Last name&lt;label&gt;
    &lt;input type="text" name="lastname" /&gt;
&lt;/div&gt;
    <span class="open-tag">&lt;/</span><span class="tag">script</span><span class="close-tag">&gt;</span>
<span class="open-tag">&lt;/</span><span class="tag">body</span><span class="close-tag">&gt;</span>
<span class="open-tag">&lt;/</span><span class="tag">html</span><span class="close-tag">&gt;</span></code></pre>
<p>Each HTML template is embedded into the page using a non-executing <code>script</code> tag. The <code>id</code> attribute is based on the filename.</p>
<p>These are now ready to be used by your client-side templating engine of choice.</p>

<h2>Extras</h2>
<p>
The web browser still has to compile HTML templates at runtime, when they are first used.
Whilst this is usually fast, if you have a lot of templates or are running on a low powered device, you may want to pre-compile these.
</p>
<p>HTML Templates can be compiled into JavaScript on the server and cached.</p>
<p>Cassette has built-in support for pre-compiling both <a href="@Url.DocumentationUrl("html-templates/jquery-tmpl")">jQuery-tmpl templates</a>
 and <a href="@Url.DocumentationUrl("html-templates/knockoutjs-jquery-tmpl")">KnockoutJS jQuery-tmpl templates</a>.</p>
