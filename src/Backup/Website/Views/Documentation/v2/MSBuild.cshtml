@{
    ViewBag.Title = "Compile-time bundle generation using MSBuild";
}

<h1>Compile-time bundle generation using MSBuild</h1>
<p>
    By default, Cassette bundle's are generated at runtime and cached.
    For a large application, especially one using CoffeeScript or Sass, the bundle processing
    can noticeably slow down start-up time.
</p>
<p>
    To avoid impacting production application start-up time, Cassette provides an MSBuild task
    that creates the processed bundle cache at compile-time. Then at runtime, this pre-built
    cache is used, drastically reducing the amount of CPU and file I/O required.
</p>

<h2>Installing</h2>
<p>
    Install the <code>Cassette.MSBuild</code> nuget package.
</p>
<p>
    This package adds a <code>Cassette.targets</code> file to your web application
    and modifies the project file to import it. 
    Also, the <code>&lt;cassette&gt;</code> configuration section in <code>Web.config</code>
    if modified to tell Cassette where to find the compile-time generated cache files.
</p>
<p>
    After successful build, the <code>CreateBundles</code> MSBuild task is run.
    By default, the bundle cache is saved in the <code>cassette-cache</code> directory in the
    root of the web application.
</p>

<h2>Debug-mode</h2>
<p>
    Please note that when Cassette is in debug-mode, the compile-time cache is not used.
    So when testing the compile-time created bundles, be sure to set <code>debug=false</code>
    in <code>Web.config</code>.
</p>